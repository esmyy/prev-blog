"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4253],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var o=t(7294);function d(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){d(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,d=function(e,n){if(null==e)return{};var t,o,d={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(d[t]=e[t]);return d}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(d[t]=e[t])}return d}var i=o.createContext({}),s=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(i.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,d=e.mdxType,l=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=s(t),u=d,v=c["".concat(i,".").concat(u)]||c[u]||m[u]||l;return t?o.createElement(v,r(r({ref:n},p),{},{components:t})):o.createElement(v,r({ref:n},p))}));function v(e,n){var t=arguments,d=n&&n.mdxType;if("string"==typeof e||d){var l=t.length,r=new Array(l);r[0]=u;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a[c]="string"==typeof e?e:d,r[1]=a;for(var s=2;s<l;s++)r[s]=t[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2968:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var o=t(7462),d=(t(7294),t(3905));const l={},r="\u89c6\u56fe\u66f4\u65b0",a={unversionedId:"frameworks/vue2/reactivity/view-update",id:"frameworks/vue2/reactivity/view-update",title:"\u89c6\u56fe\u66f4\u65b0",description:"\u4e00\u822c\u800c\u8a00\u7684\u7ec4\u4ef6\u66f4\u65b0\uff0c\u5176\u5b9e\u662f\u6307\u89c6\u56fe\u66f4\u65b0\uff0c\u4e3a\u4e86\u548c\u7ec4\u4ef6\u5185\u90e8\u72b6\u6001\uff0c\u6570\u636e\u7b49\u7684\u66f4\u65b0\u533a\u522b\uff0c\u672c\u6587\u660e\u786e\u6307\u89c6\u56fe\u66f4\u65b0\u3002",source:"@site/docs/05-frameworks/02-vue2/04-reactivity/05-view-update.md",sourceDirName:"05-frameworks/02-vue2/04-reactivity",slug:"/frameworks/vue2/reactivity/view-update",permalink:"/docs/frameworks/vue2/reactivity/view-update",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05-frameworks/02-vue2/04-reactivity/05-view-update.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"vue2",previous:{title:"\u6d3e\u53d1\u66f4\u65b0",permalink:"/docs/frameworks/vue2/reactivity/dispatch-update"},next:{title:"nextTick",permalink:"/docs/frameworks/vue2/reactivity/next-tick"}},i={},s=[{value:"\u524d\u7f6e\u5185\u5bb9",id:"\u524d\u7f6e\u5185\u5bb9",level:2},{value:"\u8282\u70b9\u76f8\u540c\u7684\u542b\u4e49",id:"\u8282\u70b9\u76f8\u540c\u7684\u542b\u4e49",level:2},{value:"\u65b0\u8001\u8282\u70b9\u76f8\u540c",id:"\u65b0\u8001\u8282\u70b9\u76f8\u540c",level:2},{value:"prepatch \u94a9\u5b50\u8c03\u7528",id:"prepatch-\u94a9\u5b50\u8c03\u7528",level:3},{value:"update \u94a9\u5b50\u8c03\u7528",id:"update-\u94a9\u5b50\u8c03\u7528",level:3},{value:"elm \u66f4\u65b0",id:"elm-\u66f4\u65b0",level:3},{value:"postpatch \u94a9\u5b50\u8c03\u7528",id:"postpatch-\u94a9\u5b50\u8c03\u7528",level:3},{value:"\u65b0\u8001\u8282\u70b9\u4e0d\u540c",id:"\u65b0\u8001\u8282\u70b9\u4e0d\u540c",level:2},{value:"\u521b\u5efa\u65b0\u8282\u70b9",id:"\u521b\u5efa\u65b0\u8282\u70b9",level:3},{value:"\u66f4\u65b0\u5360\u4f4d\u8282\u70b9",id:"\u66f4\u65b0\u5360\u4f4d\u8282\u70b9",level:3},{value:"\u9500\u6bc1\u8001\u8282\u70b9",id:"\u9500\u6bc1\u8001\u8282\u70b9",level:3},{value:"updateChildren",id:"updatechildren",level:2},{value:"\u7528\u4f8b\u8bf4\u660e",id:"\u7528\u4f8b\u8bf4\u660e",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],p={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,d.kt)(c,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,d.kt)("h1",{id:"\u89c6\u56fe\u66f4\u65b0"},"\u89c6\u56fe\u66f4\u65b0"),(0,d.kt)("p",null,"\u4e00\u822c\u800c\u8a00\u7684\u7ec4\u4ef6\u66f4\u65b0\uff0c\u5176\u5b9e\u662f\u6307\u89c6\u56fe\u66f4\u65b0\uff0c\u4e3a\u4e86\u548c\u7ec4\u4ef6\u5185\u90e8\u72b6\u6001\uff0c\u6570\u636e\u7b49\u7684\u66f4\u65b0\u533a\u522b\uff0c\u672c\u6587\u660e\u786e\u6307\u89c6\u56fe\u66f4\u65b0\u3002"),(0,d.kt)("h2",{id:"\u524d\u7f6e\u5185\u5bb9"},"\u524d\u7f6e\u5185\u5bb9"),(0,d.kt)("p",null,"\u5f53\u89c6\u56fe\u4f9d\u8d56\u7684\u6570\u636e\u6539\u53d8\u65f6\uff0c\u4f1a\u901a\u77e5 render watcher\uff0crender watcher \u8c03\u7528 updateComponent \u6267\u884c vm.","_","update\uff0c\u800c update \u7684\u6838\u5fc3\u8fc7\u7a0b\u662f patch \u8fc7\u7a0b\uff0cpatch \u4e2d\u65b0\u65e7\u8282\u70b9\u7684\u6bd4\u8f83\u89c4\u5219\uff0c\u5c31\u662f\u6240\u8c13\u7684 diff \u7b97\u6cd5\u3002"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"return function patch(oldVnode, vnode, hydrating, removeOnly) {\n  if (isUndef(vnode)) {\n    if (isDef(oldVnode)) invokeDestroyHook(oldVnode);\n    return;\n  }\n\n  let isInitialPatch = false;\n  const insertedVnodeQueue = [];\n\n  if (isUndef(oldVnode)) {\n    // ...\n  } else {\n    const isRealElement = isDef(oldVnode.nodeType);\n    if (!isRealElement && sameVnode(oldVnode, vnode)) {\n      // @block1\n      patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n    } else {\n      // @block2\n      // ...\n      // replacing existing element\n      const oldElm = oldVnode.elm;\n      const parentElm = nodeOps.parentNode(oldElm);\n\n      // create new node\n      createElm(\n        vnode,\n        insertedVnodeQueue,\n        // extremely rare edge case: do not insert if old element is in a\n        // leaving transition. Only happens when combining transition +\n        // keep-alive + HOCs. (#4590)\n        oldElm._leaveCb ? null : parentElm,\n        nodeOps.nextSibling(oldElm)\n      );\n\n      // destroy old node\n      if (isDef(parentElm)) {\n        removeVnodes([oldVnode], 0, 0);\n      } else if (isDef(oldVnode.tag)) {\n        invokeDestroyHook(oldVnode);\n      }\n    }\n  }\n\n  invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n  return vnode.elm;\n};\n")),(0,d.kt)("p",null,"\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\uff0c\u5728 patch \u5df2\u7ecf\u8bf4\u660e\u4e86\uff0c\u5728\u6b64\u53ea\u7814\u7a76\u66f4\u65b0\u7684\u60c5\u51b5\u3002\u4e3b\u8981\u5206\u6210\u4e24\u79cd\u60c5\u51b5"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"\u65b0\u65e7\u8282\u70b9\u76f8\u540c\uff1a\u5bf9\u5e94\u4ee3\u7801\u4e2d\u7684 @block1"),(0,d.kt)("li",{parentName:"ul"},"\u65b0\u65e7\u8282\u70b9\u4e0d\u540c\uff1a\u5bf9\u5e94\u4ee3\u7801\u4e2d\u7684 @block2")),(0,d.kt)("h2",{id:"\u8282\u70b9\u76f8\u540c\u7684\u542b\u4e49"},"\u8282\u70b9\u76f8\u540c\u7684\u542b\u4e49"),(0,d.kt)("p",null,"\u66f4\u65b0\u65f6 oldVnode \u548c vnode \u90fd\u4e0d\u4e3a\u7a7a\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f1a\u8fdb\u884c sameVnode \u6bd4\u8f83"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'function sameVnode(a, b) {\n  return (\n    a.key === b.key &&\n    ((a.tag === b.tag &&\n      a.isComment === b.isComment &&\n      isDef(a.data) === isDef(b.data) &&\n      sameInputType(a, b)) ||\n      (isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)))\n  );\n}\n\nfunction sameInputType(a, b) {\n  if (a.tag !== "input") return true;\n  let i;\n  const typeA = isDef((i = a.data)) && isDef((i = i.attrs)) && i.type;\n  const typeB = isDef((i = b.data)) && isDef((i = i.attrs)) && i.type;\n  return typeA === typeB || (isTextInputType(typeA) && isTextInputType(typeB));\n}\n')),(0,d.kt)("p",null,"\u8fd9\u662f\u6bd4\u8f83\u4e24\u4e2a\u7ec4\u4ef6 vnode \u8282\u70b9\u662f\u5426\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u6700\u5173\u952e\u7684\u662f key\uff0c\u5728 key \u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff0c\u518d\u5224\u65ad\u540c\u6b65\u3001\u5f02\u6b65\u7ec4\u4ef6\u7684\u5176\u4ed6\u4e00\u4e9b\u5c5e\u6027\u662f\u5426\u76f8\u540c\u3002\u5bf9\u4e8e input \u5143\u7d20\u7684\u6bd4\u8f83\u6761\u4ef6\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u56e0\u4e3a input \u968f\u7740 type \u7684\u4e0d\u540c\uff0c\u529f\u80fd\u548c\u8868\u73b0\u5f88\u4e0d\u4e00\u6837\u3002"),(0,d.kt)("p",null,"\u53ef\u4ee5\u7406\u89e3\u4e3a\u6240\u8c13\u76f8\u540c\u8282\u70b9\uff0c\u5c31\u662f\u6ca1\u6709\u672c\u8d28\u7684\u6539\u53d8\u8fd8\u80fd\u591f\u590d\u7528\u7684\u8282\u70b9\uff0c\u800c\u4e0d\u540c\u7684\u8282\u70b9\uff0c\u5c31\u662f\u6839\u672c\u4e0d\u80fd\u590d\u7528\u4e86\u3002"),(0,d.kt)("h2",{id:"\u65b0\u8001\u8282\u70b9\u76f8\u540c"},"\u65b0\u8001\u8282\u70b9\u76f8\u540c"),(0,d.kt)("p",null,"\u5f53\u65b0\u8001\u8282\u70b9\u76f8\u540c\u65f6\u6267\u884c patchVnode"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'function patchVnode(\n  oldVnode,\n  vnode,\n  insertedVnodeQueue,\n  ownerArray,\n  index,\n  removeOnly\n) {\n  if (oldVnode === vnode) {\n    return;\n  }\n\n  if (isDef(vnode.elm) && isDef(ownerArray)) {\n    // clone reused vnode\n    vnode = ownerArray[index] = cloneVNode(vnode);\n  }\n\n  const elm = (vnode.elm = oldVnode.elm);\n\n  if (isTrue(oldVnode.isAsyncPlaceholder)) {\n    if (isDef(vnode.asyncFactory.resolved)) {\n      hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n    } else {\n      vnode.isAsyncPlaceholder = true;\n    }\n    return;\n  }\n\n  // reuse element for static trees.\n  // note we only do this if the vnode is cloned -\n  // if the new node is not cloned it means the render functions have been\n  // reset by the hot-reload-api and we need to do a proper re-render.\n  if (\n    isTrue(vnode.isStatic) &&\n    isTrue(oldVnode.isStatic) &&\n    vnode.key === oldVnode.key &&\n    (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n  ) {\n    vnode.componentInstance = oldVnode.componentInstance;\n    return;\n  }\n\n  // @s1 prepatch\u94a9\u5b50\u8c03\u7528\n  let i;\n  const data = vnode.data;\n  if (isDef(data) && isDef((i = data.hook)) && isDef((i = i.prepatch))) {\n    i(oldVnode, vnode);\n  }\n\n  // @s2 update\u94a9\u5b50\u8c03\u7528\n  const oldCh = oldVnode.children;\n  const ch = vnode.children;\n  if (isDef(data) && isPatchable(vnode)) {\n    for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n    if (isDef((i = data.hook)) && isDef((i = i.update))) i(oldVnode, vnode);\n  }\n\n  // @s3 DOM\u66ff\u6362\n  if (isUndef(vnode.text)) {\n    if (isDef(oldCh) && isDef(ch)) {\n      if (oldCh !== ch)\n        updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);\n    } else if (isDef(ch)) {\n      if (process.env.NODE_ENV !== "production") {\n        checkDuplicateKeys(ch);\n      }\n      if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, "");\n      addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n    } else if (isDef(oldCh)) {\n      removeVnodes(oldCh, 0, oldCh.length - 1);\n    } else if (isDef(oldVnode.text)) {\n      nodeOps.setTextContent(elm, "");\n    }\n  } else if (oldVnode.text !== vnode.text) {\n    nodeOps.setTextContent(elm, vnode.text);\n  }\n\n  // @s4 postpatch\n  if (isDef(data)) {\n    if (isDef((i = data.hook)) && isDef((i = i.postpatch))) i(oldVnode, vnode);\n  }\n}\n')),(0,d.kt)("p",null,"\u6bd4\u5bf9\u7684\u57fa\u672c\u903b\u8f91\u662f\u4e24\u4e2a\u8282\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u4fdd\u7559\u4e00\u90e8\u5206\u80fd\u591f\u4fdd\u7559\u7684\uff0c\u66f4\u65b0\u90a3\u4e9b\u5fc5\u8981\u66f4\u65b0\u7684\u5185\u5bb9\uff0c\u5e76\u6267\u884c\u76f8\u5e94\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4e3b\u8981\u5185\u5bb9\u5728\u4ee3\u7801\u4e2d\u6807\u8bb0\u4e86 4 \u4e2a\u90e8\u5206 @s1 - @s4\u3002\u4e0b\u9762\u4f9d\u6b21\u8bf4\u660e\u4e3b\u8981\u6b65\u9aa4\u5185\u5bb9"),(0,d.kt)("h3",{id:"prepatch-\u94a9\u5b50\u8c03\u7528"},"prepatch \u94a9\u5b50\u8c03\u7528"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"let i;\nconst data = vnode.data;\nif (isDef(data) && isDef((i = data.hook)) && isDef((i = i.prepatch))) {\n  i(oldVnode, vnode);\n}\n")),(0,d.kt)("p",null,"\u5224\u65ad\u662f\u4e00\u4e2a\u7ec4\u4ef6\u7c7b\u578b\u7684\u8282\u70b9\u65f6\uff0c\u6267\u884c prepatch \u94a9\u5b50\uff0c\u5b9a\u4e49\u5728 src/core/vdom/create-component.js \u4e2d"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"prepatch (oldVnode: MountedComponentVNode, vnode: MountedComponentVNode) {\n  const options = vnode.componentOptions\n  const child = vnode.componentInstance = oldVnode.componentInstance\n  updateChildComponent(\n    child,\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  )\n},\n")),(0,d.kt)("p",null,"\u770b\u8fd9\u4e2a\u8c03\u7528\u7684\u53c2\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u50cf\u662f\u8981\u5c06\u65e7\u7684 instance \u548c\u65b0\u7684 vnode \u5173\u8054\u8d77\u6765\u505a\u66f4\u65b0\u3002\n\u7528\u7684\u53c2\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u50cf\u662f\u8981\u5c06\u65e7\u7684 instance \u548c\u65b0\u7684 vnode \u5173\u8054\u8d77\u6765\u505a\u66f4\u65b0\u3002updateChildComponent \u5b9a\u4e49\u5728 src/core/instance/lifecycle.js\uff0c"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'export function updateChildComponent(\n  vm: Component,\n  propsData: ?Object,\n  listeners: ?Object,\n  parentVnode: MountedComponentVNode,\n  renderChildren: ?Array<VNode>\n) {\n  if (process.env.NODE_ENV !== "production") {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // "$stable" marker.\n  const newScopedSlots = parentVnode.data.scopedSlots;\n  const oldScopedSlots = vm.$scopedSlots;\n  const hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent\'s\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  const needsForceUpdate = !!(\n    renderChildren || // has new static slots\n    vm.$options._renderChildren || // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm\'s placeholder node without re-render\n\n  if (vm._vnode) {\n    // update child tree\'s parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    const props = vm._props;\n    const propKeys = vm.$options._propKeys || [];\n    for (let i = 0; i < propKeys.length; i++) {\n      const key = propKeys[i];\n      const propOptions: any = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  const oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== "production") {\n    isUpdatingChildComponent = false;\n  }\n}\n')),(0,d.kt)("p",null,"\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u4f46\u5e76\u4e0d\u590d\u6742\uff0c\u7531\u4e8e vnode \u6539\u53d8\uff0c\u7ec4\u4ef6 vnode \u5bf9\u5e94\u7684 vm \u4e0a\u7684\u4e00\u4e9b\u5c5e\u6027\u4e5f\u8981\u66f4\u65b0\uff0c\u8fd9\u91cc\u5c31\u662f\u5c06\u65b0\u7684 vnode \u7684 attrs \u548c listeners \u7b49\u66f4\u65b0\u5230 vm \u4e0a\u9762\u3002\u901a\u8fc7\u8fd9\u4e2a prepatch\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u66f4\u65b0\u7ec4\u4ef6\u65f6\u5e76\u975e\u76f4\u63a5\u521b\u5efa\u65b0\u7684 vm \u66ff\u4ee3\uff0c\u800c\u662f\u5728\u5df2\u6709 vm \u7684\u57fa\u7840\u4e0a\u53bb\u505a\u66f4\u65b0\u3002"),(0,d.kt)("h3",{id:"update-\u94a9\u5b50\u8c03\u7528"},"update \u94a9\u5b50\u8c03\u7528"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"const oldCh = oldVnode.children;\nconst ch = vnode.children;\nif (isDef(data) && isPatchable(vnode)) {\n  for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n  if (isDef((i = data.hook)) && isDef((i = i.update))) i(oldVnode, vnode);\n}\n")),(0,d.kt)("p",null,"\u5148\u7f13\u5b58\u4e86\u65b0\u8001\u8282\u70b9\u7684 children\uff0c\u7136\u540e\u53bb\u6267\u884c\u5404 module \u7684 update \u94a9\u5b50\uff0c\u6bd4\u5982\u8bf4\u5728 prepatch \u65f6\u66f4\u65b0\u4e86\u7684 attrs\uff0clisteners \u7b49\uff0c\u8fd9\u91cc\u5c31\u662f\u6267\u884c\u8fd9\u4e9b\u6a21\u5757\u7684 update \u94a9\u5b50\u51fd\u6570\u3002\u7136\u540e\u6700\u540e\u662f\u6267\u884c vnode \u672c\u8eab\u7684 update \u94a9\u5b50\u51fd\u6570\u3002"),(0,d.kt)("h3",{id:"elm-\u66f4\u65b0"},"elm \u66f4\u65b0"),(0,d.kt)("p",null,"\u5728 vm \u66f4\u65b0\u4e4b\u540e\uff0c\u5c31\u662f\u66f4\u65b0 DOM \u4e86"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'const oldCh = oldVnode.children;\nconst ch = vnode.children;\n\nif (isUndef(vnode.text)) {\n  if (isDef(oldCh) && isDef(ch)) {\n    if (oldCh !== ch)\n      updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);\n  } else if (isDef(ch)) {\n    if (process.env.NODE_ENV !== "production") {\n      checkDuplicateKeys(ch);\n    }\n    if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, "");\n    addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n  } else if (isDef(oldCh)) {\n    removeVnodes(oldCh, 0, oldCh.length - 1);\n  } else if (isDef(oldVnode.text)) {\n    nodeOps.setTextContent(elm, "");\n  }\n} else if (oldVnode.text !== vnode.text) {\n  nodeOps.setTextContent(elm, vnode.text); // \u8fd9\u91cc\u5c31\u662f elm.textContent = vnode.text\n}\n')),(0,d.kt)("p",null,"\u8fd9\u91cc nodeOps \u662f\u4e00\u4e9b DOM \u64cd\u4f5c\u51fd\u6570\u7684\u5c01\u88c5\u3002\u8fd9\u90e8\u5206\u662f\u5224\u65ad\u5982\u679c\u662f\u6587\u672c\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u5bf9 elm \u8fdb\u884c\u6587\u672c\u7684\u66ff\u6362\u3002\u5bf9\u4e8e\u975e\u6587\u672c\u8282\u70b9\uff0c\u6839\u636e oldCh \u548c ch \u7684\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"oldCh \u548c ch \u90fd\u6709\uff1a\u8fd9\u79cd\u60c5\u51b5\u8c03\u7528 updateChildren \u8fdb\u884c\u5b50\u8282\u70b9\u7684\u6bd4\u5bf9\u66f4\u65b0"),(0,d.kt)("li",{parentName:"ul"},"\u53ea\u6709 ch \uff1a\u5982\u679c\u65e7\u7684\u8282\u70b9\u65f6\u6587\u672c\uff0c\u90a3\u4e48\u5148\u6e05\u7a7a\u6587\u672c\uff0c\u7136\u540e\u518d\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230 elm \u4e0b"),(0,d.kt)("li",{parentName:"ul"},"\u53ea\u6709 oldCh \uff1a\u8bf4\u660e\u65b0\u8282\u70b9\u5565\u4e5f\u6ca1\u6709\uff0c\u5219\u8c03\u7528 removeVnodes \u505a\u8001\u8282\u70b9\u7684\u6e05\u7406"),(0,d.kt)("li",{parentName:"ul"},"oldCh \u548c ch \u90fd\u6ca1\u6709\uff1a\u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u5c31\u662f\u539f\u6765\u6709\u6587\u672c\uff0c\u73b0\u5728\u6587\u672c\u6e05\u7a7a\u4e86")),(0,d.kt)("p",null,"\u8fd9\u4e2a\u65b0\u65e7\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5224\u65ad\u5904\u7406\u7684\u8fc7\u7a0b\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e24\u4e2a\u4e8c\u53c9\u6811\u7684\u6bd4\u8f83\u6216\u5408\u5e76\uff0c\u5982\u679c\u6709\u4e00\u65b9\u5df2\u7ecf\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u7ee7\u7eed\u9012\u5f52\u6df1\u5165\u4e86\u3002 updateChildren \u540e\u9762\u5355\u72ec\u8fdb\u884c\u8bf4\u660e\u3002"),(0,d.kt)("h3",{id:"postpatch-\u94a9\u5b50\u8c03\u7528"},"postpatch \u94a9\u5b50\u8c03\u7528"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"if (isDef(data)) {\n  if (isDef((i = data.hook)) && isDef((i = i.postpatch))) i(oldVnode, vnode);\n}\n")),(0,d.kt)("p",null,"\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u5982\u679c\u6709 postpatch \u94a9\u5b50\u5219\u6267\u884c\u3002"),(0,d.kt)("p",null,"\u603b\u7684\u6765\u8bf4\uff0c\u5bf9\u4e8e sameVnode \u7684\u60c5\u51b5\uff0c\u5c31\u662f vnode \u662f\u65b0\u7684\uff0c\u5c3d\u53ef\u80fd\u5730\u53bb\u5c1d\u8bd5\u590d\u7528\uff0c\u800c\u4e0d\u662f\u6839\u636e\u65b0\u7684 vnode \u66f4\u65b0 vm\uff0c\u8fdb\u800c\u66f4\u65b0 elm"),(0,d.kt)("h2",{id:"\u65b0\u8001\u8282\u70b9\u4e0d\u540c"},"\u65b0\u8001\u8282\u70b9\u4e0d\u540c"),(0,d.kt)("p",null,"\u65b0\u8001\u8282\u70b9\u4e0d\u540c\u65f6\uff0c\u5c31\u6ca1\u6cd5\u590d\u7528\u4e86\u3002\u8981\u505a\u7684\u4e8b\u60c5\u7b80\u5355\u6765\u8bf4\u662f\u7528\u65b0\u7684\u8282\u70b9\u66ff\u6362\u6389\u8001\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e3b\u8981\u6709 3 \u4e2a\u6b65\u9aa4"),(0,d.kt)("ol",null,(0,d.kt)("li",{parentName:"ol"},"\u521b\u5efa\u65b0\u8282\u70b9"),(0,d.kt)("li",{parentName:"ol"},"\u66f4\u65b0\u5360\u4f4d\u8282\u70b9"),(0,d.kt)("li",{parentName:"ol"},"\u9500\u6bc1\u8001\u8282\u70b9")),(0,d.kt)("h3",{id:"\u521b\u5efa\u65b0\u8282\u70b9"},"\u521b\u5efa\u65b0\u8282\u70b9"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"// replacing existing element\nconst oldElm = oldVnode.elm;\nconst parentElm = nodeOps.parentNode(oldElm);\n\n// create new node\ncreateElm(\n  vnode,\n  insertedVnodeQueue,\n  // extremely rare edge case: do not insert if old element is in a\n  // leaving transition. Only happens when combining transition +\n  // keep-alive + HOCs. (#4590)\n  oldElm._leaveCb ? null : parentElm,\n  nodeOps.nextSibling(oldElm)\n);\n")),(0,d.kt)("p",null,"\u9996\u5148\u4fdd\u5b58 oldElm \u548c parentElm\uff0c\u7136\u540e\u8c03\u7528 createElm \u6839\u636e vnode \u53bb\u751f\u6210 newElm\uff0ccreateElm \u4e2d\u4f1a\u4ee5 oldElm \u4f5c\u4e3a\u63d2\u5165\u4f4d\u7f6e\u7684\u53c2\u8003\u8c03\u7528 insertBefore\uff0c\u4ee5\u5c06 newElm \u63d2\u5165\u5230 parentElm \u91cc\u9762\u53bb\u3002\u5177\u4f53\u521b\u5efa\u548c\u63d2\u5165\u7684\u8fc7\u7a0b\u8bf4\u660e\u5728 ",(0,d.kt)("a",{parentName:"p",href:"/docs/frameworks/vue2/render/create-elm"},"\u521b\u5efa Node")," \u3002"),(0,d.kt)("h3",{id:"\u66f4\u65b0\u5360\u4f4d\u8282\u70b9"},"\u66f4\u65b0\u5360\u4f4d\u8282\u70b9"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'// update parent placeholder node element, recursively\nif (isDef(vnode.parent)) {\n  let ancestor = vnode.parent;\n  const patchable = isPatchable(vnode);\n  while (ancestor) {\n    for (let i = 0; i < cbs.destroy.length; ++i) {\n      cbs.destroy[i](ancestor);\n    }\n    ancestor.elm = vnode.elm;\n    if (patchable) {\n      for (let i = 0; i < cbs.create.length; ++i) {\n        cbs.create[i](emptyNode, ancestor);\n      }\n      // #6513\n      // invoke insert hooks that may have been merged by create hooks.\n      // e.g. for directives that uses the "inserted" hook.\n      const insert = ancestor.data.hook.insert;\n      if (insert.merged) {\n        // start at index 1 to avoid re-invoking component mounted hook\n        for (let i = 1; i < insert.fns.length; i++) {\n          insert.fns[i]();\n        }\n      }\n    } else {\n      registerRef(ancestor);\n    }\n    ancestor = ancestor.parent;\n  }\n}\n')),(0,d.kt)("p",null,"\u5982\u679c vnode.parent \u6210\u7acb\uff0c\u8bf4\u660e\u662f\u5b50\u7ec4\u4ef6\uff0c\u5728\u7236\u7ec4\u4ef6\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5b50\u7ec4\u4ef6\u662f\u4ee5\u4e00\u4e2a placeholder node \u7684\u8eab\u4efd\u5b58\u5728\u7684\uff0c\u8fd9\u91cc\u5c31\u662f\u9012\u5f52\u67e5\u627e\u5360\u4f4d\u8282\u70b9\uff0c\u66f4\u65b0\u5360\u4f4d\u8282\u70b9\u7684 elm \u4e3a vnode.elm\uff0c\u4e5f\u5c31\u662f DOM \u7684\u5f15\u7528\u3002\u5176\u4ed6\u7684\u4e00\u4e9b\u94a9\u5b50\u51fd\u6570\u7684\u8c03\u7528\u6682\u65f6\u4e0d\u53bb\u5173\u6ce8\u3002"),(0,d.kt)("h3",{id:"\u9500\u6bc1\u8001\u8282\u70b9"},"\u9500\u6bc1\u8001\u8282\u70b9"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"// destroy old node\nif (isDef(parentElm)) {\n  removeVnodes([oldVnode], 0, 0);\n} else if (isDef(oldVnode.tag)) {\n  invokeDestroyHook(oldVnode);\n}\n")),(0,d.kt)("p",null,"\u5982\u679c\u7236\u5143\u7d20\u5b58\u5728\uff0c\u8c03\u7528 removeVnodes\uff0c\u5426\u5219\u5982\u679c\u4e0d\u662f\u4e00\u4e2a\u6587\u672c\u8282\u70b9\uff0c\u5c31\u6267\u884c invokeDestroyHook\u3002\u76f8\u5173\u7684\u51fd\u6570\u5982\u4e0b"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"function removeVnodes(vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx];\n    if (isDef(ch)) {\n      if (isDef(ch.tag)) {\n        removeAndInvokeRemoveHook(ch);\n        invokeDestroyHook(ch);\n      } else {\n        // Text node\n        removeNode(ch.elm);\n      }\n    }\n  }\n}\n\nfunction invokeDestroyHook(vnode) {\n  let i, j;\n  const data = vnode.data;\n  if (isDef(data)) {\n    if (isDef((i = data.hook)) && isDef((i = i.destroy))) i(vnode);\n    for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\n  }\n  if (isDef((i = vnode.children))) {\n    for (j = 0; j < vnode.children.length; ++j) {\n      invokeDestroyHook(vnode.children[j]);\n    }\n  }\n}\n\nfunction removeAndInvokeRemoveHook(vnode, rm) {\n  if (isDef(rm) || isDef(vnode.data)) {\n    let i;\n    const listeners = cbs.remove.length + 1;\n    if (isDef(rm)) {\n      // we have a recursively passed down rm callback\n      // increase the listeners count\n      rm.listeners += listeners;\n    } else {\n      // directly removing\n      rm = createRmCb(vnode.elm, listeners);\n    }\n    // recursively invoke hooks on child component root node\n    if (\n      isDef((i = vnode.componentInstance)) &&\n      isDef((i = i._vnode)) &&\n      isDef(i.data)\n    ) {\n      removeAndInvokeRemoveHook(i, rm);\n    }\n    for (i = 0; i < cbs.remove.length; ++i) {\n      cbs.remove[i](vnode, rm);\n    }\n    if (isDef((i = vnode.data.hook)) && isDef((i = i.remove))) {\n      i(vnode, rm);\n    } else {\n      rm();\n    }\n  } else {\n    removeNode(vnode.elm);\n  }\n}\n\nfunction removeNode(el) {\n  const parent = nodeOps.parentNode(el);\n  // element may have already been removed due to v-html / v-text\n  if (isDef(parent)) {\n    nodeOps.removeChild(parent, el);\n  }\n}\n")),(0,d.kt)("p",null,"cbs \u5c31\u662f attrs, directives, events \u7b49\u8fd9\u4e9b\u4e0e\u6807\u7b7e\u5c5e\u6027\u76f8\u5173\u7684\u6a21\u5757\u7684\u94a9\u5b50\u51fd\u6570\u3002"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"removeVnodes\uff1a\u6267\u884c vnode \u7684\u5220\u9664\uff0c\u5305\u542b\u76f8\u5173\u7684 DOM \u7684\u5220\u9664\uff0c\u94a9\u5b50\u8c03\u7528\u7b49"),(0,d.kt)("li",{parentName:"ul"},"invokeDestroyHook\uff1a\u6267\u884c vnode \u672c\u8eab\u7684 destroy \u94a9\u5b50\uff0c\u4ee5\u53ca\u4e0e\u5f53\u524d\u8282\u70b9\u76f8\u5173\u7684\u5c5e\u6027 destroy \u94a9\u5b50\uff0c\u7406\u89e3\u4e3a\u6267\u884c\u6211\u81ea\u5df1\u7684\u9500\u6bc1\uff0c\u6267\u884c\u9644\u52a0\u5728\u6211\u8eab\u4e0a\u7684\u5185\u5bb9\u7684\u9500\u6bc1\u3002"),(0,d.kt)("li",{parentName:"ul"},"removeAndInvokeRemoveHook\uff1a\u8fd9\u91cc\u7684 remove \u662f\u6307\u5bf9\u5e94 vnode.elm DOM \u5143\u7d20\u4ece\u6587\u6863\u4e2d\u79fb\u9664\uff0c\u529f\u80fd\u662f\u5220\u9664 DOM \u5143\u7d20\u5e76\u6267\u884c remove \u76f8\u5173\u94a9\u5b50\u3002")),(0,d.kt)("h2",{id:"updatechildren"},"updateChildren"),(0,d.kt)("p",null,"\u5728 VDOM Tree \u7684\u6bd4\u5bf9\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u5224\u65ad\u51fa\u662f\u76f8\u540c\u7684\uff0c\u4e14\u90fd\u5177\u6709\u5b50\u8282\u70b9\uff0c\u901a\u8fc7 updateChildren \u7ee7\u7eed\u5411\u4e0b\u6bd4\u5bf9\u5b50\u8282\u70b9\u3002\u4ee3\u7801\u5982\u4e0b"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},'function updateChildren(\n  parentElm,\n  oldCh,\n  newCh,\n  insertedVnodeQueue,\n  removeOnly\n) {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n  // removeOnly is a special flag used only by <transition-group>\n  // to ensure removed elements stay in correct relative positions\n  // during leaving transitions\n  const canMove = !removeOnly;\n\n  if (process.env.NODE_ENV !== "production") {\n    checkDuplicateKeys(newCh);\n  }\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (isUndef(oldStartVnode)) {\n      oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n    } else if (isUndef(oldEndVnode)) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (sameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(\n        oldStartVnode,\n        newStartVnode,\n        insertedVnodeQueue,\n        newCh,\n        newStartIdx\n      );\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (sameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(\n        oldEndVnode,\n        newEndVnode,\n        insertedVnodeQueue,\n        newCh,\n        newEndIdx\n      );\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      patchVnode(\n        oldStartVnode,\n        newEndVnode,\n        insertedVnodeQueue,\n        newCh,\n        newEndIdx\n      );\n      canMove &&\n        nodeOps.insertBefore(\n          parentElm,\n          oldStartVnode.elm,\n          nodeOps.nextSibling(oldEndVnode.elm)\n        );\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      patchVnode(\n        oldEndVnode,\n        newStartVnode,\n        insertedVnodeQueue,\n        newCh,\n        newStartIdx\n      );\n      canMove &&\n        nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      if (isUndef(oldKeyToIdx))\n        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      idxInOld = isDef(newStartVnode.key)\n        ? oldKeyToIdx[newStartVnode.key]\n        : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n      if (isUndef(idxInOld)) {\n        // New element\n        createElm(\n          newStartVnode,\n          insertedVnodeQueue,\n          parentElm,\n          oldStartVnode.elm,\n          false,\n          newCh,\n          newStartIdx\n        );\n      } else {\n        vnodeToMove = oldCh[idxInOld];\n        if (sameVnode(vnodeToMove, newStartVnode)) {\n          patchVnode(\n            vnodeToMove,\n            newStartVnode,\n            insertedVnodeQueue,\n            newCh,\n            newStartIdx\n          );\n          oldCh[idxInOld] = undefined;\n          canMove &&\n            nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n        } else {\n          // same key but different element. treat as new element\n          createElm(\n            newStartVnode,\n            insertedVnodeQueue,\n            parentElm,\n            oldStartVnode.elm,\n            false,\n            newCh,\n            newStartIdx\n          );\n        }\n      }\n      newStartVnode = newCh[++newStartIdx];\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n    addVnodes(\n      parentElm,\n      refElm,\n      newCh,\n      newStartIdx,\n      newEndIdx,\n      insertedVnodeQueue\n    );\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n}\n')),(0,d.kt)("p",null,"\u5f88\u591a\u65f6\u5019\u6210\u5806\u7684 ",(0,d.kt)("inlineCode",{parentName:"p"},"if-else")," \u867d\u7136\u770b\u8d77\u6765\u4e0d\u592a\u4f18\u96c5\uff0c\u4f46\u662f\u5374\u903b\u8f91\u6e05\u695a\uff0c\u8fd9\u513f\u5e76\u6ca1\u6709\u548b\u770b\u8d77\u6765\u90a3\u4e48\u53ef\u6015\uff0c\u4ed4\u7ec6\u53bb\u770b\u4e00\u4e0b\u5c31\u80fd\u7406\u89e3\u5176\u903b\u8f91\u3002"),(0,d.kt)("h3",{id:"\u7528\u4f8b\u8bf4\u660e"},"\u7528\u4f8b\u8bf4\u660e"),(0,d.kt)("p",null,"\u4e3e\u4e2a\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"new Vue({\n  data() {\n    return {\n      list: [\n        { title: '\u5471 1', id: 1 },\n        { title: '\u5471 2', id: 2 },\n        { title: '\u5471 3', id: 3},\n      ],\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.list = [\n        { title: '\u5495 2', id: 2 },\n        { title: '\u5495 1', id: 1 },\n        { title: '\u5495 3', id: 3},\n        { title: '\u5495 4', id: 4},\n      ];\n    }, 3000);\n  },\n\n  template: `<div class=\"header\">\n    <li v-for=\"item in list\" :key=\"item.id\">{{item.title}}</li>\n  </div>`,\n  el: '#app',\n}\n")),(0,d.kt)("p",null,"\u5728\u5b9a\u65f6\u5668\u6267\u884c\u4e4b\u540e\uff0c\u663e\u7136 oldCh \u548c newCh \u53c2\u6570\u5982\u4e0b"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-js"},"// oldCh\n[\n  { key: 1, tag: 'li', elm: /*<li>\u5471 1</li>\u5143\u7d20\u5f15\u7528*/ },\n  { key: 2, tag: 'li',  elm: /*<li>\u5471 2</li>\u5143\u7d20\u5f15\u7528*/ },\n  { key: 3, tag: 'li',  elm: /*<li>\u5471 3</li>\u5143\u7d20\u5f15\u7528*/ }\n]\n\n// newCh\n[\n  { key: 2, elm: undefined }, // title: '\u5495 2'\n  { key: 1, elm: undefined }, // title: '\u5495 1',\n  { key: 3, elm: undefined }, // title: '\u5495 3',\n  { key: 4, elm: undefined }, // title: '\u5495 4',\n]\n")),(0,d.kt)("p",null,"\u90a3\u4e00\u5806\u6761\u4ef6\u5224\u65ad\u505a\u7684\u4e8b\u60c5\uff0c\u662f\u5728 oldCh \u548c newCh \u6570\u7ec4\u4e2d\uff0c\u5c3d\u91cf\u901a\u8fc7 sameVnode \u5728\u8fd9\u4e24\u4e2a\u6570\u7ec4\u91cc\u9762\u786e\u5b9a\u5bf9\u5e94\u5173\u7cfb\uff0c\u5982\u679c\u627e\u5230\u4e4b\u540e\u8c03\u7528 patchVnode\uff0c\u6839\u636e olcCh \u7684 elm \u53bb\u751f\u6210\u65b0\u7684 elm \u4fdd\u5b58\u5230 newCh \u7684 elm \u4e0a\uff0c\u5982\u679c\u6ca1\u6709\u76f8\u540c\u8282\u70b9\u5c31\u8c03\u7528 createElm \u76f4\u63a5\u53d6\u751f\u6210\u65b0\u7684 elm\u3002\u90a3\u5806\u6761\u4ef6\u5224\u65ad\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u90e8\u5206"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"\u524d\u9762 2 \u4e2a\u5224\u65ad\uff1a\u8bbe\u7f6e oldStartVnode \u548c oldEndVnode\uff0c\u662f\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\u3002"),(0,d.kt)("li",{parentName:"ul"},"\u4e2d\u95f4 4 \u4e2a\u5224\u65ad\uff1anewCh \u548c oldCh \u7684\u5934\u5c3e\u6307\u9488\u8282\u70b9\u4e4b\u95f4\u76f4\u63a5\u505a\u5bf9\u6bd4\uff0c\u5224\u65ad\u662f\u5426\u76f8\u540c\uff0c\u5bf9\u4e8e children \u6765\u8bf4\uff0c\u5f80\u5f80\u662f\u524d\u540e\u5143\u7d20\u7684\u589e\u51cf\uff0c\u987a\u5e8f\u7684\u53d8\u6362\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u5bf9\u6bd4\u5176\u5b9e\u6709\u70b9\u7c7b\u4f3c\u4e8e\u201c\u5feb\u6377\u65b9\u5f0f\u201d\u3002"),(0,d.kt)("li",{parentName:"ul"},"\u6700\u540e\u7684 else \u5224\u65ad\uff1a\u5982\u679c newCh \u548c oldCh \u7684\u5934\u5c3e\u6307\u9488\u8282\u70b9\u90fd\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u751f\u6210 oldCh \u8282\u70b9\u7684 keyMap\uff0c\u53bb\u67e5\u627e newStartVnode \u5728 oldCh \u4e2d\u7684\u4e0b\u6807\u4f4d\u7f6e\uff0c\u80fd\u627e\u5230\u5c31 patchVnode \u6bd4\u8f83\uff0c\u627e\u4e0d\u5230\u5c31 createElm \u751f\u6210\u65b0\u7684\u3002")),(0,d.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,d.kt)("p",null,"\u89c6\u56fe\u66f4\u65b0\u65f6\uff0c\u9996\u5148\u6839\u636e\u4e2d\u95f4\u4ee3\u7801\u53ca\u6570\u636e\uff0c\u53bb\u751f\u6210\u65b0\u7684 VDOM Tree\uff0c\u6839\u636e oldTree \u548c newTree \u53bb\u9010\u4e2a\u8fdb\u884c\u8282\u70b9\u6bd4\u8f83\u3002"),(0,d.kt)("p",null,"\u8282\u70b9\u7684\u66f4\u65b0\uff0c\u4e3b\u8981\u5206\u6210\u65b0\u65e7\u8282\u70b9\u76f8\u540c\u548c\u65b0\u65e7\u8282\u70b9\u4e0d\u540c\u4e24\u79cd\u60c5\u51b5"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},"\u65b0\u65e7\u8282\u70b9\u76f8\u540c\uff1a\u5c1d\u8bd5\u590d\u7528\uff0c\u5bf9\u4e8e\u7ec4\u4ef6\uff0c\u5982\u679c\u53ef\u4ee5\u590d\u7528\uff0c\u5c31\u901a\u8fc7 newVnode \u7ed3\u5408 oldVm \u5bf9 vm \u8fdb\u884c\u66f4\u65b0\uff0c\u800c\u975e\u521b\u5efa\u65b0\u7684 vm\uff0c\u66f4\u65b0\u4e86 vm \u540e\uff0c\u518d\u91cd\u65b0\u751f\u6210\u7ec4\u4ef6\u5bf9\u5e94\u7684 DOM\u3002"),(0,d.kt)("li",{parentName:"ul"},"\u65b0\u65e7\u8282\u70b9\u4e0d\u540c\uff1a\u521b\u5efa\u65b0\u7684")))}m.isMDXComponent=!0}}]);